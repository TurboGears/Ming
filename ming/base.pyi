from typing import TypeVar, Any, Iterator, List, Optional, overload, Literal, Tuple

import pymongo


def __getattr__(name) -> Any: ...  # marks file as incomplete

M = TypeVar('M')

class Cursor(Iterator[M]):

    def count(self) -> int: ...
    def distinct(self, key: str, *args, **kwargs) -> list: ...
    def limit(self, limit: int) -> Cursor[M]: ...
    def skip(self, skip: int) -> Cursor[M]: ...
    def hint(self, index) -> Cursor[M]: ...

    @overload
    def sort(self, list: List[Tuple[str, int]]) -> Cursor[M]: ...
    @overload
    def sort(self, list: List[list]) -> Cursor[M]: ...
    @overload
    def sort(self, key: str, direction: int = pymongo.ASCENDING) -> Cursor[M]: ...

    def one(self) -> M: ...
    def first(self) -> Optional[M]: ...
    def all(self) -> List[M]: ...
